import belt_bottom_top from "@/assets/user/1330t190.gif";
import * as React from "react";
import { DataProvider, useData } from "@/context/DataContext";
import { MatchStatusType } from "@/types/match.types";
import { Suspense } from "react";
import { adjustToVietnamTime, formatDate } from "@/lib/helper";
import { EventsIcon } from "@/components/layout/Icon";
import { Loader } from "@/components/layout/Loader";

const HeroSection = React.lazy(() => import("@/components/layout/HeroSection"));
const SportSection = React.lazy(
  () => import("@/components/layout/SportSection")
);
const ReplaySection = React.lazy(
  () => import("@/components/layout/ReplaySection")
);

const sportIconMap: Record<string, React.ReactNode> = {
  esports: "üéÆ",
  pool: "üé±",
  volleyball: "üèê",
  tennis: "üéæ",
  basketball: "üèÄ",
  race: "üèéÔ∏è",
  wwe: "ü§º",
  football: "‚öΩ",
  badminton: "üè∏",
};

const AppContent: React.FC = () => {
  const { matchData, replayData, sportData, loading, error } = useData();
  const today = React.useMemo(() => new Date(), []);
  const vietnamToday = React.useMemo(() => adjustToVietnamTime(today), [today]);

  const filterMatchesBySport = React.useCallback(
    (slug: string) => {
      return (matchData || []).filter((match) => {
        if (!match?.startTime) return false;
        const matchDate = adjustToVietnamTime(new Date(match.startTime));
        const matchDay = formatDate(matchDate);
        const todayDay = formatDate(vietnamToday);
        return (
          match?.sport?.slug === slug &&
          match?.status !== MatchStatusType.FINISHED &&
          match?.status !== MatchStatusType.CANCELLED &&
          matchDay === todayDay
        );
      });
    },
    [matchData, vietnamToday]
  );

  const sportMatches = React.useMemo(() => {
    return (sportData || []).reduce(
      (acc, sport) => ({
        ...acc,
        [sport.slug ?? ""]: filterMatchesBySport(sport.slug ?? ""),
      }),
      {} as Record<string, typeof matchData>
    );
  }, [sportData, filterMatchesBySport]);

  const spotlightMatches = React.useMemo(() => {
    return (matchData || []).filter((match) => {
      if (!match?.startTime) return false;
      const matchDate = adjustToVietnamTime(new Date(match.startTime));
      const matchDay = formatDate(matchDate);
      const todayDay = formatDate(vietnamToday);
      return (
        match?.isHot &&
        match?.status !== MatchStatusType.FINISHED &&
        match?.status !== MatchStatusType.CANCELLED &&
        matchDay === todayDay
      );
    });
  }, [matchData, vietnamToday]);

  const replayFilter = React.useMemo(() => {
    return (replayData || []).filter((match) => match?.isShown);
  }, [replayData]);

  if (loading || !sportData?.length) return <Loader />;
  if (error) return <div>Error: {error.message}</div>;

  return (
    <Suspense fallback={<Loader />}>
      <HeroSection />
      <div className="hidden md:flex flex-col items-center justify-center gap-2 py-4 overflow-x-auto">
        <span className="text-center text-white text-sm md:text-lg md:font-semibold">
          HOIQUANTV xem tr·ª±c ti·∫øp eSports, b√≥ng ƒë√°, b√≥ng r·ªï, b√≥ng chuy·ªÅn, tennis
          online nhanh nh·∫•t - H·ªôi Qu√°n TV
        </span>
        <span className="text-center text-white text-sm md:text-sm">
          HoiQuanTV l√† k√™nh c·∫≠p nh·∫≠t link xem tr·ª±c ti·∫øp eSports, b√≥ng ƒë√°, b√≥ng
          chuy·ªÅn, b√≥ng r·ªï v√† c√°c m√¥n th·ªÉ thao kh√°c cho Fan h√¢m m·ªô Vi·ªát Nam v√†
          Qu·ªëc t·∫ø qua k·∫øt n·ªëi Internet. Xem th·ªÉ thao tr·ª±c tuy·∫øn v·ªõi tr√™n
          HoiQuanTV
        </span>
      </div>
      <div className="flex md:hidden items-center gap-2 py-4 overflow-x-auto scrollable-x w-full">
        <span className="text-center text-white text-sm font-semibold flex-shrink-0">
          HOIQUANTV xem tr·ª±c ti·∫øp eSports, b√≥ng ƒë√°, b√≥ng r·ªï, b√≥ng chuy·ªÅn, tennis
          online nhanh nh·∫•t - H·ªôi Qu√°n TV. HoiQuanTV l√† k√™nh c·∫≠p nh·∫≠t link xem
          tr·ª±c ti·∫øp b√≥ng ƒë√°, b√≥ng chuy·ªÅn, b√≥ng r·ªï v√† c√°c m√¥n th·ªÉ thao kh√°c cho
          Fan h√¢m m·ªô Vi·ªát Nam v√† Qu·ªëc t·∫ø qua k·∫øt n·ªëi Internet. Xem th·ªÉ thao tr·ª±c
          tuy·∫øn v·ªõi tr√™n HoiQuanTV
        </span>
      </div>
      <main className="w-full mx-auto max-w-[640px] sm:max-w-[768px] md:max-w-[960px] lg:max-w-[1024px] xl:max-w-[1200px] 2xl:max-w-[1440px] 3xl:max-w-[1440px]">
        <SportSection
          title="T√ÇM ƒêI·ªÇM TH·ªÇ THAO"
          icon={sportIconMap["events"] || <EventsIcon className="w-6 h-6" />}
          matches={spotlightMatches}
          isSpotlight
        />
        <div className="px-1 sm:px-4 md:px-6">
          <img
            src={belt_bottom_top}
            alt="Ad Banner"
            className="object-cover md:w-full"
          />
        </div>
        {sportData.map((sport) => (
          <SportSection
            key={sport._id}
            title={sport.name ?? ""}
            icon={sportIconMap[sport.slug ?? ""] || sport.icon || null}
            matches={sportMatches[sport.slug ?? ""] || []}
            viewAllUrl="#"
          />
        ))}
        <ReplaySection
          title="XEM L·∫†I C√ÅC TR·∫¨N ƒê·∫§U"
          replays={replayFilter}
          viewAllUrl="#"
        />
      </main>
    </Suspense>
  );
};

const App: React.FC = () => {
  return (
    <DataProvider>
      <AppContent />
    </DataProvider>
  );
};

export default App;
